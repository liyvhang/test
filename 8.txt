接口和实现类的形象比喻：
有一桶水，每个人拿自己的管子（没有接口，只有实现类）去接水，是可以接的，但是要有很多管子，每根都要插进桶里 
但是，如果桶上有一个口（有接口和实现类） 可以接任何一个管子是不是很方便


Java语言的继承是单一继承，一个子类只能有一个父类（一个儿子只能有一个亲爹）
  Java语言给我们提供了一种机制，用于处理继承单一的局限性的，接口
  
 接口：接口是一种特殊的抽象类，是一个比抽象类还抽象的类，这种抽象类中只包含常量与方法的定义，而没有变量和方法的实现，接口，接口里所有的方法全是抽象方法，
  继承接口使用implements，声明接口用interface
3 接口中成员的特点
Java 为了保证数据安全性是不能多继承的，也就是一个类只有一个父类。

但是接口不同，一个类可以同时实现多个接口，不管这些接口之间有没有关系，所以接口弥补了抽象类不能多继承的缺陷。

接口是抽象类的延伸，它可以定义没有方法体的方法，要求实现者去实现。

接口的所有方法访问权限自动被声明为 public

接口中可以定义“成员变量”，会自动变为 public static final 修饰的静态常量 

可以通过类命名直接访问：ImplementClass.name
不推荐使用接口创建常量类

实现接口的非抽象类必须实现接口中所有方法，抽象类可以不用全部实现
接口不能创建对象，但可以申明一个接口变量，方便调用
完全解耦，可以编写可复用性更好的代码

抽象类：抽象类的初衷是“抽象”，即规定这个类“是什么”，具体的实现暂不确定，是不完整的，因此不允许直接创建实例。

抽象类是由子类具有相同的一类特征抽象而来，也可以说是其基类或者父类
抽象方法必须为 public 或者 protected（因为如果为 private，则不能被子类继承，子类便无法实现该方法），缺省情况下默认为 public
抽象类不能用来创建对象
抽象方法必须由子类来实现
如果一个类继承于一个抽象类，则子类必须实现父类的抽象方法，如果子类没有实现父类的抽象方法，则必须将子类也定义为抽象类
抽象类还是很有用的重构工具，因为它们使得我们可以很容易地将公共方法沿着继承层次结构向上移动
4 接口和类的关系

A:类与类之间:继承关系,一个类只能直接继承一个父类,但是支持多重继承

B:类与接口之间:只有实现关系,一个类可以实现多个接口

C:接口与接口之间:只有继承关系,一个接口可以继承多个接口
7 接口和抽象类的区别

1.共性：

不断的进行抽取，抽取出抽象的，没有具体实现的方法,都不能实例化（不能创建对象）

2.区别1: 与类的关系

       (1)类与接口是实现关系，而且是多实现，一个类可以实现多个接口，类与抽象类是继承关系，Java中的继承是单一继承，多层继承，一个类只能继承一个父类，但是可以有爷爷类

       (2)区别2： 成员

                          a.成员变量

                                   抽象类可以有成员变量，也可以有常量

                                   接口只能有常量，默认修饰符public static final

                            b.成员方法

                                          抽象类可以有抽象方法，也可以有非抽象方法

                                          接口只能有抽象方法，默认修饰符 public abstract

                            c.构造方法

                                          抽象类有构造方法，为子类提供

                                          接口没有构造方法


 多态概述
    多态是继封装、继承之后，面向对象的第三大特性。
    现实事物经常会体现出多种形态，如学生，学生是人的一种，则一个具体的同学张三既是学生也是人，即出现两种形态。    
    Java作为面向对象的语言，同样可以描述一个事物的多种形态。如Student类继承了Person类，一个Student的对象便既是Student，又是Person。
    Java中多态的代码体现在一个子类对象(实现类对象)既可以给这个子类(实现类对象)引用变量赋值，又可以给这个子类(实现类对象)的父类(接口)变量赋值。
    如Student类可以为Person类的子类。那么一个Student对象既可以赋值给一个Student类型的引用，也可以赋值给一个Person类型的引用。
    最终多态体现为父类引用变量可以指向子类对象。
    多态的前提是必须有子父类关系或者类实现接口关系，否则无法完成多态。
    在使用多态后的父类引用变量调用方法时，会调用子类重写后的方法。



直接把方法写在类当中不就可以了？
就是说去掉类名后面的Implements 接口 ，可以不可以呢？

接口的最主要的作用是达到统一访问，就是在创建对象的时候用接口创建，【接口名】 【对象名】=new 【实现接口的类】，这样你像用哪个类的对象就可以new哪个对象了，不需要改原来的代码，就和你的USB接口一样，插什么读什么，就是这个原理。就像你问的，都有个method1的方法，如果我用接口，我上面就可以one.method1();是吧？那样我new a（）；就是用a的方法，new b（）就是用b的方法
这样不方便吗？
这个就叫统一访问，因为你实现这个接口的类的方法名相同，但是实现内容不同。
另外java用接口还有一个好处，就是java不支持多重继承，但是可以实现多个接口，这个在某种程度上可以看做进行多重继承的一种办法。